# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

---
- name: Set Fact for Pulp password and server IP
  ansible.builtin.set_fact:
    pulp_password: "{{ hostvars['localhost']['pulp_password'] }}"
    pulp_server_ip: "{{ hostvars['localhost']['admin_nic_ip'] }}"
  no_log: true

- name: Create directories for Pulp in shared storage
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  loop: "{{ pulp_directories }}"

# This task creates the nginx.conf file for Pulp
# - name: Create nginx.conf file for Pulp
#  ansible.builtin.template:
#    src: "{{ nginx_conf_path }}"
#    dest: "{{ nginx_conf_dest }}"
#    mode: "{{ pulp_dir_permissions }}"

- name: Create settings.py for Pulp
  ansible.builtin.template:
    src: "{{ settings_tmp_path }}"
    dest: "{{ settings_py_path }}"
    mode: "{{ pulp_dir_permissions }}"

- name: Deploy Pulp container and check deployment status
  block:
    - name: Deploy the Pulp container
      containers.podman.podman_container:
        name: "{{ pulp_container_name }}"
        image: "{{ pulp_image }}"
        state: present
        restart_policy: always
        hostname: "{{ pulp_container_name }}"
        volumes: "{{ volumes }}"
        privileged: true
        device:
          - "{{ device_name }}"
        ports:
          - "{{ pulp_port }}"
        cmd_args: "{{ arg_list }}"

    - name: Start the Pulp container
      containers.podman.podman_container:
        name: "{{ pulp_container_name }}"
        state: started

    - name: Check if Pulp container is running after deployment
      containers.podman.podman_container_info:
        name: "{{ pulp_container_name }}"
      register: pulp_container_status

    - name: Notify user of Pulp container deployment status
      ansible.builtin.debug:
        msg: "{{ pulp_deployed_msg }}"
      when:
        - pulp_container_status.containers | length > 0
        - pulp_container_status.containers[0].State.Status == 'running'

  rescue:
    - name: Pulp container deployment failed
      ansible.builtin.fail:
        msg: "{{ pulp_deployed_fail_msg }}"

- name: Reset Pulp Password
  containers.podman.podman_container_exec:
    name: "{{ pulp_container_name }}"
    command: "{{ reset_password_cmd }}"
  retries: "{{ retries_var }}"
  delay: "{{ delay_var }}"
  when: pulp_password | length > 1
  no_log: true
