# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
pcs_image_name: "omnia_pcs"
pcs_image_tag: "latest"
pcs_container_name: "omnia_pcs"
read_write_mode: "0644"
read_write_execute_mode: "0744"
pcs_container_dir: "{{ oim_shared_path }}/omnia/pcs"
pcs_container_log_dir: "{{ oim_shared_path }}/omnia/log/pcs"
container_systemd_dir: "/etc/containers/systemd/"
pcs_directories:
  - { path: "{{ pcs_container_log_dir }}", mode: "{{ read_write_mode }}" }
  - { path: "{{ pcs_container_dir }}", mode: "{{ read_write_execute_mode }}" }
  - { path: "{{ container_systemd_dir }}", mode: "{{ read_write_mode }}" }

migration_threshold: 0
pcs_startup_file:
  - {template: "pcs-start.sh.j2", dest: "{{ oim_shared_path }}/omnia/pcs/pcs-start.sh", mode: "{{ read_write_execute_mode }}" }
  - {template: "corosync.conf.j2", dest: "{{ oim_shared_path }}/omnia/pcs/corosync.conf", mode: "{{ read_write_mode }}" }
  - {template: "pcs-container.container.j2", dest: "{{ container_systemd_dir }}/{{ pcs_container_name }}.container", mode: "{{ read_write_mode }}" }

pcs_image_pull_fail_msg: >
  The pull of the provision image {{ pcs_image_name }}:{{ pcs_image_tag }} has failed.
  To resolve this issue, please address the following error message: {{ image_pull_result }}.
  After rectifying the issues, you can re-run the playbook to successfully pull the provision image.
pcs_image_not_found_msg: "The specified image {{ pcs_image_name }}:{{ pcs_image_tag }} is not found."

wait_time: 10
pcs_volumes:
  - /etc/localtime:/etc/localtime:ro
  - /run/podman/podman.sock:/run/podman/podman.sock:ro
  - "{{ pcs_container_dir }}/pcs-start.sh:/opt/omnia/pcs/pcs-start.sh"
  - "{{ pcs_container_dir }}/corosync.conf:/etc/corosync/corosync.conf:z"
  - "{{ pcs_container_log_dir }}:/var/log/cluster:z"
  - "{{ oim_shared_path }}/omnia:/opt/omnia:z"

pcs_container_success_msg: "The {{ pcs_container_name }} container has been successfully deployed."
pcs_container_failure_msg: |
  The deployment of the {{ pcs_container_name }} container has failed. To resolve this issue,
  please run the utility/oim_cleanup.yml playbook to clean up any existing OIM resources.
  After the cleanup, you can re-run the original playbook to deploy the {{ pcs_container_name }} container successfully.

# Usage: pcs-start.sh.j2:Common
omnia_nfs_share: "{{ oim_shared_path }}/omnia" # Define NFS share path
oim_metadata_file: "{{ omnia_nfs_share }}/.data/oim_metadata.yml"
monitor_interval: "30s"
monitor_timeout: "20s"
start_interval: "0s"
start_timeout: "20s"
stop_interval: "0s"
stop_timeout: "90s"

# Usage: pcs-start.sh.j2: omnia_core
omnia_core_name: "omnia_core"
core_container_image_tag: "latest"
core_container_name: "omnia_core"
omnia_core_image: "{{ omnia_core_name }}:{{ core_container_image_tag }}"
core_container_logs_dir: "{{ omnia_nfs_share }}/log/core/container"
pulp_ha_dir: "{{ omnia_nfs_share }}/pulp/pulp_ha"
omnia_core_run_opts: "-dt --hostname {{ omnia_core_name }} --restart=always --network=host \
                     -v {{ omnia_nfs_share }}:/opt/omnia:z -v {{ omnia_nfs_share }}/ssh_config/.ssh:/root/.ssh:z \
                     -v {{ core_container_logs_dir }}:/var/log:z -v {{ hosts_file }}:/etc/hosts:z \
                     -v {{ pulp_ha_dir }}:/root/.config/pulp:z -e ROOT_PASSWORD_HASH={{ hostvars['localhost']['omnia_core_hashed_passwd'] }} \
                     --name {{ omnia_core_name }} --cap-add=CAP_AUDIT_WRITE"

# Usage: pcs-start.sh.j2: omnia_provision
provision_container_name: "omnia_provision"
provision_image_name: "omnia_provision"
provision_image_tag: "latest"
provision_image: "localhost/{{ provision_image_name }}:{{ provision_image_tag }}"
provision_dir: "{{ omnia_nfs_share }}/provision"
xcatdata_dir: "{{ provision_dir }}/xcatdata"
pgsql_data_dir: "{{ xcatdata_dir }}/pgsql/data"
install_dir: "{{ provision_dir }}/install"
tftpboot_dir: "{{ provision_dir }}/tftpboot"
hosts_file: "{{ omnia_nfs_share }}/hosts"
provision_logs_dir: "{{ omnia_nfs_share }}/log/provision"
provision_run_opts: " --network=host --restart=always --hostname {{ oim_hostname }} --privileged -v \
                    {{ omnia_nfs_share }}/ssh_config/.ssh:/root/.ssh:z -v {{ omnia_nfs_share }}:/opt/omnia:z \
                    -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v {{ xcatdata_dir }}:/xcatdata:z -v {{ install_dir }}:/install:z -v \
                    {{ tftpboot_dir }}:/tftpboot:z -v {{ provision_logs_dir }}/xcat:/var/log/xcat:z -v {{ pgsql_data_dir }}:/var/lib/pgsql/data:z \
                    -v {{ hosts_file }}:/etc/hosts:z"

# Usage: pcs-start.sh.j2: kubespray
kubespray_image_name: "omnia_kubespray"
kubespray_version: "{{ hostvars['localhost']['kubespray_version'] }}"
kubespray_name: "omnia_kubespray_{{ kubespray_version }}"
kubespray_image: "localhost/{{ kubespray_image_name }}:{{ kubespray_version }}"
kubespray_run_opts: " -v {{ omnia_nfs_share }}/ssh_config/.ssh:/root/.ssh:z \
                    -v {{ omnia_nfs_share }}:/opt/omnia:z -v {{ hosts_file }}:/etc/hosts:z \
                    --network=host --restart=always --cap-add AUDIT_WRITE"

# Usage: pcs-start.sh.j2: pulp
pulp_container_name: "omnia_pulp"
pulp_image: "docker.io/pulp/pulp"
pulp_port: "2225:80"
pulp_share: "{{ omnia_nfs_share }}/pulp"
pulp_run_opts: " --hostname {{ pulp_container_name }} --device /dev/fuse:/dev/fuse:rwm \
               -e PULP_WORKERS=10 -e PULP_API_WORKERS=10 -e PULP_CONTENT_WORKERS=10 \
               -e PULP_GUNICORN_TIMEOUT=30 -e PULP_API_WORKERS_MAX_REQUESTS=1000 \
               -e PULP_API_WORKERS_MAX_REQUESTS_JITTER=50 --restart=always --publish {{ pulp_port }} \
               -v {{ pulp_share }}/settings:/etc/pulp:z \
               -v {{ pulp_share }}/settings/pulp_storage:/var/lib/pulp:z \
               -v {{ pulp_share }}/settings/pgsql:/var/lib/pgsql:z \
               -v {{ pulp_share }}/settings/containers:/var/lib/containers:z \
               -v {{ omnia_nfs_share }}/log/pulp:/var/log/pulp:z"

pcs_resources:
  - "{{ pulp_container_name }}"
  - "{{ provision_container_name }}"
  - "{{ omnia_core_name }}"
pcs_start_container_finished: "/opt/omnia/pcs/pcs-start.finished"
pcs_start_shared_finished: "{{ pcs_container_dir }}/pcs-start.finished"
wait_time_pcs_start: 200
pcs_start_failed_msg: "pcs-start.sh execution failed."
pcs_failed_resource_msg: |
  The deployment of pcs resources have failed. To resolve this issue,
  please run the utility/oim_cleanup.yml playbook to clean up any existing OIM resources.
  After the cleanup, you can re-run the original playbook to deploy the {{ pcs_container_name }} container
  and its resources.
